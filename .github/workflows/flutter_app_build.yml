name: App Android Release

on:
  push:
    branches: [main]

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          repository: kanggara75/ordoapps-test
          token: ${{ secrets.GH_TOKEN }}
      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: "5.8.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.11
      - name: Create version.txt with NuGetVersionV2
        run: echo ${{ steps.gitversion.outputs.NuGetVersionV2  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  build:
    name: Build APK and Create release
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Read version & build apk
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi
      - run: mv build/app/outputs/apk/release/app-x86_64-release.apk build/app/outputs/apk/release/ORDO_UI_Slicing_Test-x86_64.apk
      - run: mv build/app/outputs/apk/release/app-arm64-v8a-release.apk build/app/outputs/apk/release/ORDO_UI_Slicing_Test-v8a.apk
      - run: mv build/app/outputs/apk/release/app-armeabi-v7a-release.apk build/app/outputs/apk/release/ORDO_UI_Slicing_Test-v7a.apk
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
